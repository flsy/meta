### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BooleanFilter {
  type: String = "boolean"
  value: Boolean
}

type Column {
  filterOperators: [String]
  isFiltered: Boolean
  key: Boolean
  label: String
  path: [String!]!
  sorted: Sort
  sortOptions: [String]
  type: ColumnType!
}

enum ColumnType {
  boolean
  number
  string
}

input NumberFilter {
  filters: [NumberFilterFilter!]
  type: String = "number"
}

input NumberFilterFilter {
  operator: NumberFilterOperator = EQ
  value: Int
}

enum NumberFilterOperator {
  EQ
  GE
  GT
  LE
  LT
  NE
}

type Person {
  age: Int
  firstName: String!
  id: Int!
  isArchived: Boolean
  lastName: String!
  train: Train
}

type PersonList {
  columns: [Column]!
  count: Int!
  cursor: String
  nodes: [Person]
}

input PersonListPaginationFilter {
  age: NumberFilter
  firstName: StringFilter
  id: NumberFilter
  isArchived: BooleanFilter
  lastName: StringFilter
  train: TrainFilter
}

type Query {
  persons(cursor: String, filters: PersonListPaginationFilter, limit: Int): PersonList
  trains(cursor: String, filters: TrainListPaginationFilter, limit: Int): TrainList
}

enum Sort {
  ASC
  DESC
}

input StringFilter {
  filters: [StringFilterFilter!]
  type: String = "string"
}

input StringFilterFilter {
  operator: StringFilterOperator = LIKE
  value: String
}

enum StringFilterOperator {
  EQ
  LIKE
}

type Train {
  id: Int!
  number: Int!
  persons: [Person!]
}

input TrainFilter {
  id: NumberFilter
  number: NumberFilter
}

type TrainList {
  columns: [Column]!
  count: Int!
  cursor: String
  nodes: [Train]
}

input TrainListPaginationFilter {
  id: NumberFilter
  number: NumberFilter
}
