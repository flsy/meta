### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Author {
  credit: Int!
  id: Int!
  name: Name
  photos: [Photo!]
}

type AuthorList {
  columns: AuthorListColumn!
  count: Int!
  cursor: String
  nodes: [Author]
}

type AuthorListColumn {
  credit: creditAuthorListColumn!
  id: idAuthorListColumn!
  name: nameAuthorListColumn!
  photo: photoAuthorListColumn!
}

input AuthorListPaginationFilter {
  credit: NumberFilter
  id: NumberFilter
  name: NameFilter
  photo: PhotoFilter
}

input BooleanFilter {
  type: String = "boolean"
  value: Boolean
}

type creditAuthorListColumn {
  filterForm: creditAuthorListColumnForm
  key: Boolean!
  label: String!
  type: String!
}

type creditAuthorListColumnForm {
  credit: NumberField!
  submit: TextField!
}

type firstNameNameAuthorListColumn {
  filterForm: firstNameNameAuthorListColumnForm
  key: Boolean!
  label: String!
  type: String!
}

type firstNameNameAuthorListColumnForm {
  firstName: TextField!
  submit: TextField!
}

type idAuthorListColumn {
  key: Boolean!
  label: String!
  type: String!
}

type idNameAuthorListColumn {
  key: Boolean!
  label: String!
  type: String!
}

type idPhotoAuthorListColumn {
  filterForm: idPhotoAuthorListColumnForm
  key: Boolean!
  label: String!
  type: String!
}

type idPhotoAuthorListColumnForm {
  id: NumberField!
  submit: TextField!
}

type isPublishedPhotoAuthorListColumn {
  key: Boolean!
  label: String!
  type: String!
}

type lastNameNameAuthorListColumn {
  filterForm: lastNameNameAuthorListColumnForm
  key: Boolean!
  label: String!
  type: String!
}

type lastNameNameAuthorListColumnForm {
  lastName: TextField!
  submit: TextField!
}

type Name {
  firstName: String
  id: Int!
  lastName: String!
}

type nameAuthorListColumn {
  firstName: firstNameNameAuthorListColumn!
  id: idNameAuthorListColumn!
  lastName: lastNameNameAuthorListColumn!
}

input NameFilter {
  firstName: StringFilter
  id: NumberFilter
  lastName: StringFilter
}

type NumberField {
  errorMessage: String
  label: String
  placeholder: String
  type: String!
  value: Int
}

input NumberFilter {
  filters: [NumberFilterFilter!]
  type: String = "number"
}

input NumberFilterFilter {
  operator: NumberFilterOperator = EQ
  value: Int
}

enum NumberFilterOperator {
  EQ
  GE
  GT
  LE
  LT
  NE
}

type Photo {
  id: Int!
  isPublished: Boolean
  title: String!
}

type photoAuthorListColumn {
  id: idPhotoAuthorListColumn!
  isPublished: isPublishedPhotoAuthorListColumn!
  title: titlePhotoAuthorListColumn!
}

input PhotoFilter {
  id: NumberFilter
  isPublished: BooleanFilter
  title: StringFilter
}

type Query {
  authors(cursor: String, filters: AuthorListPaginationFilter, limit: Int): AuthorList
}

input StringFilter {
  filters: [StringFilterFilter!]
  type: String = "string"
}

input StringFilterFilter {
  operator: StringFilterOperator = LIKE
  value: String
}

enum StringFilterOperator {
  EQ
  LIKE
}

type TextField {
  errorMessage: String
  label: String
  placeholder: String
  type: String!
  value: String
}

type titlePhotoAuthorListColumn {
  key: Boolean!
  label: String!
  type: String!
}
